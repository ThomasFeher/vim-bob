*vim-bob* Plugin for working in a Bob environment

Author: Thomas Feh√©r
URL:    https://github.com/ThomasFeher/vim-bob

==============================================================================

Commands                                         *vim-bob-commands*

                                                 *vim-bob:BobInit*
:BobInit
         Must be run before any other vim-bob command can be used. Initializes
         vim-bob with the current working directory as the base directory.
         The base directory is the directory where the bob commands are
         normally executed on the command line.

                                                 *vim-bob:BobCheckout*
:BobCheckout [package]
         Checkout the given [package].
         Runs "bob dev [package] --checkout-only".

                                                 *vim-bob:BobGoto*
:BobGoto [package]
         Changes the current working directory of the buffer to be the source
         directory of the given [package].

:BobGoto! [package]
          Like ":BobGoto" but sets the current working directory globally.

                                                 *vim-bob:BobDev*
:BobDev [package] ([configuration] ([parameters]))
         Build [package] with [configuration] in development mode.
         Runs "bob dev [package] -c <configuration-dir>/[configuration]
         [parameters]"
         Additionally sets |makeprg| for the current file, so that
         subsequently the same command can be run via |:make| and error
         messages are parsed and gathered in the |quickfix| window.

                                                 *vim-bob:BobDevAndBuildCompilationDatabase*
:BobDevAndBuildCompilationDatabase [package] ([configuration] ([parameters]))
         Same as |BobDev| but additionaly a ".ycm_extra_conf.py" file is
         generated that loads the compilation database from the build.
         This allows conveniently using |YouCompleteMe| in a Bob environment.
         It is necessary to configure the build system to generate a
         "compile_commands.json" file in the build directory. CMake will do
         this if called with "-DCMAKE_EXPORT_COMPILE_COMMANDS=ON".

                                                 *vim-bob:BobClean*
:BobClean
         Deletes `dev/build` and `dev/dist` directories to force rebuilding of
         all artifacts.

==============================================================================

Configuration                                    *vim-bob-configuration*

g:bob_config_path
         Path to configuration files (with file extension ".yaml") relative to
         the base path.

g:bob_show_completion_window
         Shows an additional completion window when autocompleting packages.
         This can be useful for long package names which can become hard to
         view in the wildmenu.

==============================================================================

Interaction with other plugins                   vim-bob-interaction

CtrlP
         Per default |CtrlP| will search the repository structure of the current
         file.
         In order to have all files of the current project (all files in `dev/`)
         available to the search it is necessary to set an additional root
         marker like "recipes", which should exist for sure.
         This is achived via `let g:ctrlp_root_markers = ['recipes']` .

 vim:tw=78:et:ft=help:norl:
